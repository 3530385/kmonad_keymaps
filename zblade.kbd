
(defcfg
  input  (device-file "/dev/input/by-id/usb-_Gaming_Keyboard-event-kbd")
  ;; input  (device-file "/dev/input/event9")
  
  output (uinput-sink "My KMonad output"
    "/usr/bin/sleep 1 && /usr/bin/setxkbmap -option compose:ralt")
  cmp-seq ralt    ;; Set the compose key to `RightAlt'
  
  ;; Comment this if you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)



(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt cmp  rctl
)

(defalias
  num  (tap-hold-next 200  c  c :timeout-button (layer-toggle numbers)) ;; Bind num to a button that switches to a layer
  fn  (tap-hold-next 200  f f :timeout-button (layer-toggle funcs)) ;; Bind num to a button that switches to a layer
  sym (tap-hold-next 200  s s :timeout-button (layer-toggle symbols))
  br (tap-hold-next 200  v v :timeout-button (layer-toggle brackets))
  arr (tap-hold-next 200  a a :timeout-button  (layer-toggle arrows))
  elsft (tap-hold-next 200  e e :timeout-button lsft)
  irsft (tap-hold-next 200  i i :timeout-button rsft)
  rlctl (tap-hold-next 200  r r :timeout-button lctl)
  urctl (tap-hold-next 200  u u :timeout-button rctl)
  dsupr (tap-hold-next 200  d d :timeout-button lmet)
  msupr (tap-hold-next 200  m m :timeout-button lmet)
)

(deflayer capsaslctl
  grv  1    2    3      4      5    6    7      8    9    0    -    =    bspc
  tab  q    w    @elsft @rlctl t    y    @urctl @irsft    o    p    [    ]    \
  ctl  @arr @sym @dsupr      @fn    g    h    j      k    l    ;    '    ret
  lsft z    x    @num   @br    b    n    @msupr    ,      .    /    rsft
  lctl lmet lalt           spc            ralt cmp  rctl
)

(deflayer numbers
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    XX   /    7    8    9    -    _    _    _
  _    _    _    _    _    XX   *    4    5    6    +    _    _
  _    \(   \)    _   .    XX   0    1    2    3    _    _
  _    _    _              _              _    _    _    
)

(deflayer funcs
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    XX   f12  f7   f8   f9   _    _    _    _
  _    _    _    _    _    XX   f11  f4   f5   f6   _    _    _
  _    _    _    _    _    XX   f10  f1   f2   f3   _    _
  _    _    _              _              _    _    _    
)
(deflayer symbols
  _    _    _    _    _    _    _    _    _    _    _    _    _  _ 
  _    _    _    '    "    XX   &    #    +    -    $    `    _  _
  _    _    _    ;    :    XX   !    \_   *    =   /    |    _  
  _    _    _    _    _    XX   ~    @    %    \    ?    _    
  _    _    _              _              _    _    _    
)

(deflayer brackets
  _    _    _    _    _    _    _    _    _    _    _    _    _  _   
  _    _    _    _    _    XX   '    [    ]    <    >    _    _  _
  _    _    _    _    _    XX   "    \(  \)    /    \    _    _   
  _    _    _    _    _    XX   `    {    }    .    ?    _        
  _    _    _              _              _    _    _                 
)                                                                 
(deflayer arrows
  _    _    _    _    _    _   _    _    _    _    _    _    _  _   
  _    _    _    _    _    _   _    _    _    _    _    _    _  _
  _    _    _    _    _    _   left    down    up    rght    _    _    _   
  _    _    _    _    _    _   _    _    _    _    _    _        
  _    _    _              _              _    _    _                 
)                                                                 
